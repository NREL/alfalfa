name: CI

on:
  pull_request:
  push:

jobs:
  pre-commit:
    name: Pre-commit checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Run pre-commit
        uses: pre-commit/action@v2.0.0
        with:
          extra_args: --all-files

  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0

      - name: Run tests with pytest
        run: |
          poetry install
          poetry run pytest

  fmu-tests:
    name: Run fmu tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and run stack
        run: |
          printenv
          docker-compose -f docker-compose.yml -f docker-compose.dev.yml up --build -d

      - name: Wait for web server
        uses: nev7n/wait_for_response@v1
        with:
          url: "http://localhost/"
          responseCode: 200
          timeout: 120000
          interval: 500

      - name: Wait another 30s
        uses: jakejarvis/wait-action@master
        with:
          time: "30s"

      - name: Dump docker logs before tests
        uses: jwalton/gh-docker-logs@v1

      - name: Run tests in Docker worker container
        run: |
          docker exec alfalfa_worker_1 bash -c "cd /alfalfa && pytest -m fmu"

      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1

  integration-tests:
    name: Run integration tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0

      - name: Build and run stack
        run: |
          printenv
          docker-compose up --build -d

      - name: Wait for web server
        uses: nev7n/wait_for_response@v1
        with:
          url: "http://localhost/"
          responseCode: 200
          timeout: 120000
          interval: 500

      - name: Wait another 30s
        uses: jakejarvis/wait-action@master
        with:
          time: "30s"

      - name: Dump docker logs before tests
        uses: jwalton/gh-docker-logs@v1

      - name: Run tests with pytest
        run: |
          poetry install
          poetry run pytest --timeout=240 -m "integration"

      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1

  integration-tests-historian:
    name: Run integration tests with historian
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0

      - name: Build and run stack
        run: |
          export HISTORIAN_ENABLE=true
          printenv
          docker-compose -f docker-compose.yml -f docker-compose.historian.yml up --build -d

      - name: Wait for web server
        uses: nev7n/wait_for_response@v1
        with:
          url: "http://localhost/"
          responseCode: 200
          timeout: 120000
          interval: 500

      - name: Wait another 30s
        uses: jakejarvis/wait-action@master
        with:
          time: "30s"

      - name: Dump docker logs before tests
        uses: jwalton/gh-docker-logs@v1

      - name: Run tests with pytest
        run: |
          poetry install
          poetry run pytest --timeout=240 -m "integration"

      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1

  publish:
    if: |
      github.ref == 'refs/heads/main' ||
      github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      # Only if all other jobs pass.
      - name: Wait on tests
        uses: lewagon/wait-on-check-action@v0.2
        with:
          ref: ${{ github.ref }}
          running-workflow-name: "publish" #this job shouldn't wait for itself
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 20 # seconds

      - name: Checkout code
        uses: actions/checkout@v2

      # Install only toml, which is used to extract version.
      # We don't do anything else with Python in this job.
      - name: Install toml
        run: python -m pip install toml

      - name: Build & Publish Images
        shell: bash
        run: ./.github/workflows/publish_to_docker.sh
        env:
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
