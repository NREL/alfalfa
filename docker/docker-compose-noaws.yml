version: '3'

services:
  web: # main haystack application
    build: ../web
    image: ${BT_DOCKER_REGISTRY_URI}bt-web-${BT_ENV}:latest
    ports:
     - "80:80"
     - "29043:29043"
    environment:
     - NODE_ENV
     - AWS_ACCESS_KEY_ID
     - AWS_SECRET_ACCESS_KEY
     - JOB_QUEUE_URL
     - MONGO_URL
     - MONGO_DB_NAME
     - S3_URL
     - REDIS_HOST
     - S3_BUCKET
     - REGION
    depends_on:
      - redis
      - mongo
      - goaws
      - worker
      - mc

  # Provides a local queue, conforming to aws Queue API
  goaws:
    image: pafortin/goaws
    ports:
      - "4100:4100"

  # Local implementation of s3
  minio:
    image: minio/minio
    entrypoint:
      - minio
      - server
      - /data
    ports:
      - "9000:9000"
    environment:
      - MINIO_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
      - MINIO_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}

  mc:
    image: minio/mc
    environment:
      - MINIO_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
      - MINIO_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}

    # needs to wait on minio:9000 
    # depends_on only requires that the container be starting, not ready
    # depends_on is also ignored when deploying in swarm mode
    entrypoint: >
      /bin/sh -c "
      minio_up=1;
      while [ "$$minio_up" -ne 0 ]
        do 
        sleep 5 
        nc -z minio 9000
        minio_up=$$?
      done;
      /usr/bin/mc config host add myminio http://minio:9000 $${MINIO_ACCESS_KEY} $${MINIO_SECRET_KEY};
      /usr/bin/mc mb myminio/alfalfa;
      /usr/bin/mc policy public myminio/alfalfa;
      "
    depends_on:
      - minio

  worker:
    build: ../worker
    image: ${BT_DOCKER_REGISTRY_URI}bt-worker-${BT_ENV}:latest
    environment:
     - AWS_ACCESS_KEY_ID
     - AWS_SECRET_ACCESS_KEY
     - JOB_QUEUE_URL
     - MONGO_URL
     - MONGO_DB_NAME
     - LOGLEVEL=INFO
     - NODE_ENV
     - S3_URL
     - REDIS_HOST
     - S3_BUCKET
     - REGION
    depends_on:
      - redis
      - mongo
      - goaws
      - mc

  mongo:
    image: mongo
    ports:
      - "27017:27017"
  
  client-test:
    build:
      context: client
      dockerfile: Dockerfile-test
    depends_on:
      - web

  redis:
    image: redis
    ports:
      - "6379:6379"

