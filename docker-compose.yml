version: "3.4"
services:
  web: # main haystack application
    container_name: alfalfa_web
    build:
      # the purpose of context one level above dockerfile
      # is to utilize shared code, specifically in db
      dockerfile: alfalfa_web/Dockerfile
      context: .
      target: base
      args:
        - NODE_ENV
    image: ${REGISTRY_BASE_URI}/web:${VERSION_TAG}
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - "29043:29043"
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - GIT_COMMIT
      - JOB_QUEUE_URL
      - MONGO_DB_NAME
      - MONGO_URL
      - NODE_ENV
      - REDIS_HOST
      - REGION
      - S3_BUCKET
      - S3_URL
      - S3_URL_EXTERNAL
    depends_on:
      - goaws
      - mc
      - mongo
      - redis
      - worker
  # Provides a local queue, conforming to AWS Queue (SQS) API
  goaws:
    container_name: alfalfa_goaws
    image: pafortin/goaws:v0.3.1
    ports:
      - "4100:4100"
  # Local implementation of s3
  minio:
    container_name: alfalfa_minio
    image: minio/minio:RELEASE.2021-01-16T02-19-44Z
    entrypoint:
      - minio
      - server
      - /data
    ports:
      - "9000:9000"
    environment:
      - MINIO_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
      - MINIO_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}
  mc:
    container_name: alfalfa_mc
    image: minio/mc:RELEASE.2022-12-13T00-23-28Z
    environment:
      - MINIO_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
      - MINIO_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc config host add myminio http://minio:9000 $${MINIO_ACCESS_KEY} $${MINIO_SECRET_KEY};
      mc mb -p myminio/alfalfa;
      mc policy set public myminio/alfalfa;
      "
    depends_on:
      - minio
  worker:
    build:
      # the purpose of context one level above is to install the entire alfalfa package
      # and to copy the wait-for-it.sh and start_worker.sh files in the `deploy` directory
      dockerfile: alfalfa_worker/Dockerfile
      context: .
      target: base
    image: ${REGISTRY_BASE_URI}/worker:${VERSION_TAG}
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - HISTORIAN_ENABLE
      - INFLUXDB_ADMIN_PASSWORD
      - INFLUXDB_ADMIN_USER
      - INFLUXDB_DB
      - INFLUXDB_HOST
      - JOB_QUEUE_URL
      - LOGLEVEL=INFO
      - MONGO_DB_NAME
      - MONGO_URL
      - NODE_ENV
      - REDIS_HOST
      - REGION
      - S3_BUCKET
      - S3_URL
    depends_on:
      - goaws
      - mc
      - mongo
      - redis
  mongo:
    container_name: alfalfa_mongo
    image: mongo:5.0.14
    ports:
      - "27017:27017"
  redis:
    container_name: alfalfa_redis
    image: redis:7.0.7
    ports:
      - "6379:6379"
